"use strict";var A=(l,r)=>()=>(r||l((r={exports:{}}).exports,r),r.exports);var S=A((ue,z)=>{"use strict";z.exports=function l(r,f){if(r===f)return!0;if(r&&f&&typeof r=="object"&&typeof f=="object"){if(r.constructor!==f.constructor)return!1;var g,y,v;if(Array.isArray(r)){if(g=r.length,g!=f.length)return!1;for(y=g;y--!==0;)if(!l(r[y],f[y]))return!1;return!0}if(r.constructor===RegExp)return r.source===f.source&&r.flags===f.flags;if(r.valueOf!==Object.prototype.valueOf)return r.valueOf()===f.valueOf();if(r.toString!==Object.prototype.toString)return r.toString()===f.toString();if(v=Object.keys(r),g=v.length,g!==Object.keys(f).length)return!1;for(y=g;y--!==0;)if(!Object.prototype.hasOwnProperty.call(f,v[y]))return!1;for(y=g;y--!==0;){var e=v[y];if(!l(r[e],f[e]))return!1}return!0}return r!==r&&f!==f}});var _=A(U=>{"use strict";Object.defineProperty(U,"__esModule",{value:!0});var T=S();T.code='require("ajv/dist/runtime/equal").default';U.default=T});var L=A(w=>{"use strict";Object.defineProperty(w,"__esModule",{value:!0});w.formatNames=w.fastFormats=w.fullFormats=void 0;function I(l,r){return{validate:l,compare:r}}w.fullFormats={date:I(J,F),time:I(R,N),"date-time":I(X,V),duration:/^P(?!$)((\d+Y)?(\d+M)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?|(\d+W)?)$/,uri:ee,"uri-reference":/^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'"()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\?(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,"uri-template":/^(?:(?:[^\x00-\x20"'<>%\\^`{|}]|%[0-9a-f]{2})|\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?)*\})*$/i,url:/^(?:https?|ftp):\/\/(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u{00a1}-\u{ffff}]+-)*[a-z0-9\u{00a1}-\u{ffff}]+)(?:\.(?:[a-z0-9\u{00a1}-\u{ffff}]+-)*[a-z0-9\u{00a1}-\u{ffff}]+)*(?:\.(?:[a-z\u{00a1}-\u{ffff}]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/iu,email:/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,hostname:/^(?=.{1,253}\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\.?$/i,ipv4:/^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,ipv6:/^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))$/i,regex:ne,uuid:/^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,"json-pointer":/^(?:\/(?:[^~/]|~0|~1)*)*$/,"json-pointer-uri-fragment":/^#(?:\/(?:[a-z0-9_\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,"relative-json-pointer":/^(?:0|[1-9][0-9]*)(?:#|(?:\/(?:[^~/]|~0|~1)*)*)$/,byte:re,int32:{type:"number",validate:ae},int64:{type:"number",validate:oe},float:{type:"number",validate:D},double:{type:"number",validate:D},password:!0,binary:!0};w.fastFormats={...w.fullFormats,date:I(/^\d\d\d\d-[0-1]\d-[0-3]\d$/,F),time:I(/^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)?$/i,N),"date-time":I(/^\d\d\d\d-[0-1]\d-[0-3]\d[t\s](?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i,V),uri:/^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/)?[^\s]*$/i,"uri-reference":/^(?:(?:[a-z][a-z0-9+\-.]*:)?\/?\/)?(?:[^\\\s#][^\s#]*)?(?:#[^\\\s]*)?$/i,email:/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i};w.formatNames=Object.keys(w.fullFormats);function H(l){return l%4===0&&(l%100!==0||l%400===0)}var B=/^(\d\d\d\d)-(\d\d)-(\d\d)$/,W=[0,31,28,31,30,31,30,31,31,30,31,30,31];function J(l){let r=B.exec(l);if(!r)return!1;let f=+r[1],g=+r[2],y=+r[3];return g>=1&&g<=12&&y>=1&&y<=(g===2&&H(f)?29:W[g])}function F(l,r){if(!!(l&&r))return l>r?1:l<r?-1:0}var C=/^(\d\d):(\d\d):(\d\d)(\.\d+)?(z|[+-]\d\d(?::?\d\d)?)?$/i;function R(l,r){let f=C.exec(l);if(!f)return!1;let g=+f[1],y=+f[2],v=+f[3],e=f[5];return(g<=23&&y<=59&&v<=59||g===23&&y===59&&v===60)&&(!r||e!=="")}function N(l,r){if(!(l&&r))return;let f=C.exec(l),g=C.exec(r);if(!!(f&&g))return l=f[1]+f[2]+f[3]+(f[4]||""),r=g[1]+g[2]+g[3]+(g[4]||""),l>r?1:l<r?-1:0}var E=/t|\s/i;function X(l){let r=l.split(E);return r.length===2&&J(r[0])&&R(r[1],!0)}function V(l,r){if(!(l&&r))return;let[f,g]=l.split(E),[y,v]=r.split(E),e=F(f,y);if(e!==void 0)return e||N(g,v)}var K=/\/|:/,Q=/^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\?(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;function ee(l){return K.test(l)&&Q.test(l)}var G=/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm;function re(l){return G.lastIndex=0,G.test(l)}var te=-(2**31),se=2**31-1;function ae(l){return Number.isInteger(l)&&l<=se&&l>=te}function oe(l){return Number.isInteger(l)}function D(){return!0}var ie=/[^\\]\\Z/;function ne(l){if(ie.test(l))return!1;try{return new RegExp(l),!0}catch{return!1}}});var ge=b,Z={$schema:"https://json-schema.org/draft/2020-12/schema",$id:"https://allmaps.org/annotation/schemas/map.json",title:"Georeferenced map",type:"object",properties:{id:{type:["integer","string"]},gcps:{type:"array",items:{$ref:"#/$defs/gcp"}},version:{type:"integer",enum:[1],default:1,errorMessage:"Only version 1 is supported. Map should have property `version` with value `1`."},image:{$ref:"#/$defs/image"},pixelMask:{type:"array",minItems:3,items:{type:"array",items:{type:"integer"},minItems:2,maxItems:2},errorMessage:"Invalid pixel mask. The property `pixelMask` must be an array of at least 3 points (`[x, y]`)."}},required:["image"],$defs:{gcp:{type:"object",properties:{id:{type:["integer","string"]},image:{$ref:"#/$defs/point"},world:{$ref:"#/$defs/point"}},required:["image","world"],errorMessage:"Invalid GCPs. Each GCP must have property `image` (`[x, y]`) and property `world` (`[lon, lat]`)."},point:{type:"array",minItems:2,maxItems:2,items:{type:"number"}},image:{type:"object",properties:{id:{type:["integer","string"]},uri:{type:"string",format:"uri",errorMessage:"Invalid or missing image URI. Image property `uri` must be a [valid URI](https://datatracker.ietf.org/doc/html/rfc3986)."},width:{type:"integer",errorMessage:"Invalid or missing image width. Image property `width` must be a valid integer."},height:{type:"integer",errorMessage:"Invalid or missing image height. Image property `height` must be a valid integer."},version:{type:"integer",enum:[2,3],default:2,errorMessage:"Invalid image version, only IIIF Image API 2.0 and 3.0 are supported. Image property `version` must be either `2` or `3`."}},required:["uri","width","height"],errorMessage:"Invalid image. Image must be an object with required properties `uri`, `width` and `height`."}},errorMessage:"Invalid map. A map must be an object with required property `image`."},Y={type:"object",properties:{id:{type:["integer","string"]},uri:{type:"string",format:"uri",errorMessage:"Invalid or missing image URI. Image property `uri` must be a [valid URI](https://datatracker.ietf.org/doc/html/rfc3986)."},width:{type:"integer",errorMessage:"Invalid or missing image width. Image property `width` must be a valid integer."},height:{type:"integer",errorMessage:"Invalid or missing image height. Image property `height` must be a valid integer."},version:{type:"integer",enum:[2,3],default:2,errorMessage:"Invalid image version, only IIIF Image API 2.0 and 3.0 are supported. Image property `version` must be either `2` or `3`."}},required:["uri","width","height"],errorMessage:"Invalid image. Image must be an object with required properties `uri`, `width` and `height`."},pe={type:"object",properties:{id:{type:["integer","string"]},image:{$ref:"#/$defs/point"},world:{$ref:"#/$defs/point"}},required:["image","world"],errorMessage:"Invalid GCPs. Each GCP must have property `image` (`[x, y]`) and property `world` (`[lon, lat]`)."};function $(l,{instancePath:r="",parentData:f,parentDataProperty:g,rootData:y=l,dynamicAnchors:v={}}={}){let e=null,t=0,c=$.evaluated;if(c.dynamicProps&&(c.props=void 0),c.dynamicItems&&(c.items=void 0),l&&typeof l=="object"&&!Array.isArray(l)){if(l.image===void 0){let i={instancePath:r,schemaPath:"#/required",keyword:"required",params:{missingProperty:"image"},message:"must have required property 'image'"};e===null?e=[i]:e.push(i),t++}if(l.world===void 0){let i={instancePath:r,schemaPath:"#/required",keyword:"required",params:{missingProperty:"world"},message:"must have required property 'world'"};e===null?e=[i]:e.push(i),t++}if(l.id!==void 0){let i=l.id;if(!(typeof i=="number"&&!(i%1)&&!isNaN(i)&&isFinite(i))&&typeof i!="string"){let n={instancePath:r+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type:pe.properties.id.type},message:"must be integer,string"};e===null?e=[n]:e.push(n),t++}}if(l.image!==void 0){let i=l.image;if(Array.isArray(i)){if(i.length>2){let s={instancePath:r+"/image",schemaPath:"#/$defs/point/maxItems",keyword:"maxItems",params:{limit:2},message:"must NOT have more than 2 items"};e===null?e=[s]:e.push(s),t++}if(i.length<2){let s={instancePath:r+"/image",schemaPath:"#/$defs/point/minItems",keyword:"minItems",params:{limit:2},message:"must NOT have fewer than 2 items"};e===null?e=[s]:e.push(s),t++}let n=i.length;for(let s=0;s<n;s++){let a=i[s];if(!(typeof a=="number"&&isFinite(a))){let o={instancePath:r+"/image/"+s,schemaPath:"#/$defs/point/items/type",keyword:"type",params:{type:"number"},message:"must be number"};e===null?e=[o]:e.push(o),t++}}}else{let n={instancePath:r+"/image",schemaPath:"#/$defs/point/type",keyword:"type",params:{type:"array"},message:"must be array"};e===null?e=[n]:e.push(n),t++}}if(l.world!==void 0){let i=l.world;if(Array.isArray(i)){if(i.length>2){let s={instancePath:r+"/world",schemaPath:"#/$defs/point/maxItems",keyword:"maxItems",params:{limit:2},message:"must NOT have more than 2 items"};e===null?e=[s]:e.push(s),t++}if(i.length<2){let s={instancePath:r+"/world",schemaPath:"#/$defs/point/minItems",keyword:"minItems",params:{limit:2},message:"must NOT have fewer than 2 items"};e===null?e=[s]:e.push(s),t++}let n=i.length;for(let s=0;s<n;s++){let a=i[s];if(!(typeof a=="number"&&isFinite(a))){let o={instancePath:r+"/world/"+s,schemaPath:"#/$defs/point/items/type",keyword:"type",params:{type:"number"},message:"must be number"};e===null?e=[o]:e.push(o),t++}}}else{let n={instancePath:r+"/world",schemaPath:"#/$defs/point/type",keyword:"type",params:{type:"array"},message:"must be array"};e===null?e=[n]:e.push(n),t++}}}else{let i={instancePath:r,schemaPath:"#/type",keyword:"type",params:{type:"object"},message:"must be object"};e===null?e=[i]:e.push(i),t++}if(t>0){let i=[];for(let s of e)s.keyword!=="errorMessage"&&!s.emUsed&&(s.instancePath===r||s.instancePath.indexOf(r)===0&&s.instancePath[r.length]==="/")&&s.schemaPath.indexOf("#")===0&&s.schemaPath["#".length]==="/"&&(i.push(s),s.emUsed=!0);if(i.length){let s={instancePath:r,schemaPath:"#/errorMessage",keyword:"errorMessage",params:{errors:i},message:"Invalid GCPs. Each GCP must have property `image` (`[x, y]`) and property `world` (`[lon, lat]`)."};e===null?e=[s]:e.push(s),t++}let n=[];for(let s of e)s.emUsed||n.push(s);e=n,t=n.length}return $.errors=e,t===0}$.evaluated={props:{id:!0,image:!0,world:!0},dynamicProps:!1,dynamicItems:!1};var ye=_().default,k=L().fullFormats.uri;function b(l,{instancePath:r="",parentData:f,parentDataProperty:g,rootData:y=l,dynamicAnchors:v={}}={}){let e=null,t=0,c=b.evaluated;if(c.dynamicProps&&(c.props=void 0),c.dynamicItems&&(c.items=void 0),l&&typeof l=="object"&&!Array.isArray(l)){if(l.image===void 0){let i={instancePath:r,schemaPath:"#/required",keyword:"required",params:{missingProperty:"image"},message:"must have required property 'image'"};e===null?e=[i]:e.push(i),t++}if(l.id!==void 0){let i=l.id;if(!(typeof i=="number"&&!(i%1)&&!isNaN(i)&&isFinite(i))&&typeof i!="string"){let n={instancePath:r+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type:Z.properties.id.type},message:"must be integer,string"};e===null?e=[n]:e.push(n),t++}}if(l.gcps!==void 0){let i=l.gcps;if(Array.isArray(i)){let n=i.length;for(let s=0;s<n;s++)$(i[s],{instancePath:r+"/gcps/"+s,parentData:i,parentDataProperty:s,rootData:y,dynamicAnchors:v})||(e=e===null?$.errors:e.concat($.errors),t=e.length)}else{let n={instancePath:r+"/gcps",schemaPath:"#/properties/gcps/type",keyword:"type",params:{type:"array"},message:"must be array"};e===null?e=[n]:e.push(n),t++}}if(l.version!==void 0){let i=l.version;if(!(typeof i=="number"&&!(i%1)&&!isNaN(i)&&isFinite(i))){let n={instancePath:r+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type:"integer"},message:"must be integer"};e===null?e=[n]:e.push(n),t++}if(i!==1){let n={instancePath:r+"/version",schemaPath:"#/properties/version/enum",keyword:"enum",params:{allowedValues:Z.properties.version.enum},message:"must be equal to one of the allowed values"};e===null?e=[n]:e.push(n),t++}if(t>0){let n=[];for(let a of e)a.keyword!=="errorMessage"&&!a.emUsed&&(a.instancePath===r+"/version"||a.instancePath.indexOf(r+"/version")===0&&a.instancePath[r+"/version".length]==="/")&&a.schemaPath.indexOf("#/properties/version")===0&&a.schemaPath["#/properties/version".length]==="/"&&(n.push(a),a.emUsed=!0);if(n.length){let a={instancePath:r+"/version",schemaPath:"#/properties/version/errorMessage",keyword:"errorMessage",params:{errors:n},message:"Only version 1 is supported. Map should have property `version` with value `1`."};e===null?e=[a]:e.push(a),t++}let s=[];for(let a of e)a.emUsed||s.push(a);e=s,t=s.length}}if(l.image!==void 0){let i=l.image;if(i&&typeof i=="object"&&!Array.isArray(i)){if(i.uri===void 0){let n={instancePath:r+"/image",schemaPath:"#/$defs/image/required",keyword:"required",params:{missingProperty:"uri"},message:"must have required property 'uri'"};e===null?e=[n]:e.push(n),t++}if(i.width===void 0){let n={instancePath:r+"/image",schemaPath:"#/$defs/image/required",keyword:"required",params:{missingProperty:"width"},message:"must have required property 'width'"};e===null?e=[n]:e.push(n),t++}if(i.height===void 0){let n={instancePath:r+"/image",schemaPath:"#/$defs/image/required",keyword:"required",params:{missingProperty:"height"},message:"must have required property 'height'"};e===null?e=[n]:e.push(n),t++}if(i.id!==void 0){let n=i.id;if(!(typeof n=="number"&&!(n%1)&&!isNaN(n)&&isFinite(n))&&typeof n!="string"){let s={instancePath:r+"/image/id",schemaPath:"#/$defs/image/properties/id/type",keyword:"type",params:{type:Y.properties.id.type},message:"must be integer,string"};e===null?e=[s]:e.push(s),t++}}if(i.uri!==void 0){let n=i.uri;if(typeof n=="string"){if(!k(n)){let s={instancePath:r+"/image/uri",schemaPath:"#/$defs/image/properties/uri/format",keyword:"format",params:{format:"uri"},message:'must match format "uri"'};e===null?e=[s]:e.push(s),t++}}else{let s={instancePath:r+"/image/uri",schemaPath:"#/$defs/image/properties/uri/type",keyword:"type",params:{type:"string"},message:"must be string"};e===null?e=[s]:e.push(s),t++}if(t>0){let s=[];for(let o of e)o.keyword!=="errorMessage"&&!o.emUsed&&(o.instancePath===r+"/image/uri"||o.instancePath.indexOf(r+"/image/uri")===0&&o.instancePath[r+"/image/uri".length]==="/")&&o.schemaPath.indexOf("#/$defs/image/properties/uri")===0&&o.schemaPath["#/$defs/image/properties/uri".length]==="/"&&(s.push(o),o.emUsed=!0);if(s.length){let o={instancePath:r+"/image/uri",schemaPath:"#/$defs/image/properties/uri/errorMessage",keyword:"errorMessage",params:{errors:s},message:"Invalid or missing image URI. Image property `uri` must be a [valid URI](https://datatracker.ietf.org/doc/html/rfc3986)."};e===null?e=[o]:e.push(o),t++}let a=[];for(let o of e)o.emUsed||a.push(o);e=a,t=a.length}}if(i.width!==void 0){let n=i.width;if(!(typeof n=="number"&&!(n%1)&&!isNaN(n)&&isFinite(n))){let s={instancePath:r+"/image/width",schemaPath:"#/$defs/image/properties/width/type",keyword:"type",params:{type:"integer"},message:"must be integer"};e===null?e=[s]:e.push(s),t++}if(t>0){let s=[];for(let o of e)o.keyword!=="errorMessage"&&!o.emUsed&&(o.instancePath===r+"/image/width"||o.instancePath.indexOf(r+"/image/width")===0&&o.instancePath[r+"/image/width".length]==="/")&&o.schemaPath.indexOf("#/$defs/image/properties/width")===0&&o.schemaPath["#/$defs/image/properties/width".length]==="/"&&(s.push(o),o.emUsed=!0);if(s.length){let o={instancePath:r+"/image/width",schemaPath:"#/$defs/image/properties/width/errorMessage",keyword:"errorMessage",params:{errors:s},message:"Invalid or missing image width. Image property `width` must be a valid integer."};e===null?e=[o]:e.push(o),t++}let a=[];for(let o of e)o.emUsed||a.push(o);e=a,t=a.length}}if(i.height!==void 0){let n=i.height;if(!(typeof n=="number"&&!(n%1)&&!isNaN(n)&&isFinite(n))){let s={instancePath:r+"/image/height",schemaPath:"#/$defs/image/properties/height/type",keyword:"type",params:{type:"integer"},message:"must be integer"};e===null?e=[s]:e.push(s),t++}if(t>0){let s=[];for(let o of e)o.keyword!=="errorMessage"&&!o.emUsed&&(o.instancePath===r+"/image/height"||o.instancePath.indexOf(r+"/image/height")===0&&o.instancePath[r+"/image/height".length]==="/")&&o.schemaPath.indexOf("#/$defs/image/properties/height")===0&&o.schemaPath["#/$defs/image/properties/height".length]==="/"&&(s.push(o),o.emUsed=!0);if(s.length){let o={instancePath:r+"/image/height",schemaPath:"#/$defs/image/properties/height/errorMessage",keyword:"errorMessage",params:{errors:s},message:"Invalid or missing image height. Image property `height` must be a valid integer."};e===null?e=[o]:e.push(o),t++}let a=[];for(let o of e)o.emUsed||a.push(o);e=a,t=a.length}}if(i.version!==void 0){let n=i.version;if(!(typeof n=="number"&&!(n%1)&&!isNaN(n)&&isFinite(n))){let s={instancePath:r+"/image/version",schemaPath:"#/$defs/image/properties/version/type",keyword:"type",params:{type:"integer"},message:"must be integer"};e===null?e=[s]:e.push(s),t++}if(!(n===2||n===3)){let s={instancePath:r+"/image/version",schemaPath:"#/$defs/image/properties/version/enum",keyword:"enum",params:{allowedValues:Y.properties.version.enum},message:"must be equal to one of the allowed values"};e===null?e=[s]:e.push(s),t++}if(t>0){let s=[];for(let o of e)o.keyword!=="errorMessage"&&!o.emUsed&&(o.instancePath===r+"/image/version"||o.instancePath.indexOf(r+"/image/version")===0&&o.instancePath[r+"/image/version".length]==="/")&&o.schemaPath.indexOf("#/$defs/image/properties/version")===0&&o.schemaPath["#/$defs/image/properties/version".length]==="/"&&(s.push(o),o.emUsed=!0);if(s.length){let o={instancePath:r+"/image/version",schemaPath:"#/$defs/image/properties/version/errorMessage",keyword:"errorMessage",params:{errors:s},message:"Invalid image version, only IIIF Image API 2.0 and 3.0 are supported. Image property `version` must be either `2` or `3`."};e===null?e=[o]:e.push(o),t++}let a=[];for(let o of e)o.emUsed||a.push(o);e=a,t=a.length}}}else{let n={instancePath:r+"/image",schemaPath:"#/$defs/image/type",keyword:"type",params:{type:"object"},message:"must be object"};e===null?e=[n]:e.push(n),t++}if(t>0){let n=[];for(let a of e)a.keyword!=="errorMessage"&&!a.emUsed&&(a.instancePath===r+"/image"||a.instancePath.indexOf(r+"/image")===0&&a.instancePath[r+"/image".length]==="/")&&a.schemaPath.indexOf("#/$defs/image")===0&&a.schemaPath["#/$defs/image".length]==="/"&&(n.push(a),a.emUsed=!0);if(n.length){let a={instancePath:r+"/image",schemaPath:"#/$defs/image/errorMessage",keyword:"errorMessage",params:{errors:n},message:"Invalid image. Image must be an object with required properties `uri`, `width` and `height`."};e===null?e=[a]:e.push(a),t++}let s=[];for(let a of e)a.emUsed||s.push(a);e=s,t=s.length}}if(l.pixelMask!==void 0){let i=l.pixelMask;if(Array.isArray(i)){if(i.length<3){let s={instancePath:r+"/pixelMask",schemaPath:"#/properties/pixelMask/minItems",keyword:"minItems",params:{limit:3},message:"must NOT have fewer than 3 items"};e===null?e=[s]:e.push(s),t++}let n=i.length;for(let s=0;s<n;s++){let a=i[s];if(Array.isArray(a)){if(a.length>2){let m={instancePath:r+"/pixelMask/"+s,schemaPath:"#/properties/pixelMask/items/maxItems",keyword:"maxItems",params:{limit:2},message:"must NOT have more than 2 items"};e===null?e=[m]:e.push(m),t++}if(a.length<2){let m={instancePath:r+"/pixelMask/"+s,schemaPath:"#/properties/pixelMask/items/minItems",keyword:"minItems",params:{limit:2},message:"must NOT have fewer than 2 items"};e===null?e=[m]:e.push(m),t++}let o=a.length;for(let m=0;m<o;m++){let p=a[m];if(!(typeof p=="number"&&!(p%1)&&!isNaN(p)&&isFinite(p))){let d={instancePath:r+"/pixelMask/"+s+"/"+m,schemaPath:"#/properties/pixelMask/items/items/type",keyword:"type",params:{type:"integer"},message:"must be integer"};e===null?e=[d]:e.push(d),t++}}}else{let o={instancePath:r+"/pixelMask/"+s,schemaPath:"#/properties/pixelMask/items/type",keyword:"type",params:{type:"array"},message:"must be array"};e===null?e=[o]:e.push(o),t++}}}else{let n={instancePath:r+"/pixelMask",schemaPath:"#/properties/pixelMask/type",keyword:"type",params:{type:"array"},message:"must be array"};e===null?e=[n]:e.push(n),t++}if(t>0){let n=[];for(let a of e)a.keyword!=="errorMessage"&&!a.emUsed&&(a.instancePath===r+"/pixelMask"||a.instancePath.indexOf(r+"/pixelMask")===0&&a.instancePath[r+"/pixelMask".length]==="/")&&a.schemaPath.indexOf("#/properties/pixelMask")===0&&a.schemaPath["#/properties/pixelMask".length]==="/"&&(n.push(a),a.emUsed=!0);if(n.length){let a={instancePath:r+"/pixelMask",schemaPath:"#/properties/pixelMask/errorMessage",keyword:"errorMessage",params:{errors:n},message:"Invalid pixel mask. The property `pixelMask` must be an array of at least 3 points (`[x, y]`)."};e===null?e=[a]:e.push(a),t++}let s=[];for(let a of e)a.emUsed||s.push(a);e=s,t=s.length}}}else{let i={instancePath:r,schemaPath:"#/type",keyword:"type",params:{type:"object"},message:"must be object"};e===null?e=[i]:e.push(i),t++}if(t>0){let i=[];for(let s of e)s.keyword!=="errorMessage"&&!s.emUsed&&(s.instancePath===r||s.instancePath.indexOf(r)===0&&s.instancePath[r.length]==="/")&&s.schemaPath.indexOf("#")===0&&s.schemaPath["#".length]==="/"&&(i.push(s),s.emUsed=!0);if(i.length){let s={instancePath:r,schemaPath:"#/errorMessage",keyword:"errorMessage",params:{errors:i},message:"Invalid map. A map must be an object with required property `image`."};e===null?e=[s]:e.push(s),t++}let n=[];for(let s of e)s.emUsed||n.push(s);e=n,t=n.length}return b.errors=e,t===0}b.evaluated={props:{id:!0,gcps:!0,version:!0,image:!0,pixelMask:!0},dynamicProps:!1,dynamicItems:!1};var ve=O;function O(l,{instancePath:r="",parentData:f,parentDataProperty:g,rootData:y=l,dynamicAnchors:v={}}={}){let e=null,t=0,c=O.evaluated;if(c.dynamicProps&&(c.props=void 0),c.dynamicItems&&(c.items=void 0),Array.isArray(l)){let i=l.length;for(let n=0;n<i;n++)b(l[n],{instancePath:r+"/"+n,parentData:l,parentDataProperty:n,rootData:y,dynamicAnchors:v})||(e=e===null?b.errors:e.concat(b.errors),t=e.length)}else{let i={instancePath:r,schemaPath:"#/type",keyword:"type",params:{type:"array"},message:"must be array"};e===null?e=[i]:e.push(i),t++}return O.errors=e,t===0}O.evaluated={items:!0,dynamicProps:!1,dynamicItems:!1};var we=x;var me={type:"object",properties:{type:{const:"Image",errorMessage:'Invalid annotation target. The property `type` of the annotation target must have value `"Image"`.'},source:{type:"string",format:"uri",errorMessage:"Invalid annotation target. The property `source` of the annotation target must be a valid IIIF Image API URI."},service:{type:"array",minItems:1,maxItems:1,prefixItems:[{type:"object",properties:{type:{type:"string",enum:["ImageService2","ImageService3"],errorMessage:'Invalid image service, only IIIF Image API 2.0 and 3.0 are supported. The property `type` of the single object in the `service` array must be either `"ImageService2"` or `"ImageService3"`.'},"@id":{type:"string",format:"uri",errorMessage:"Invalid image serice. The property `@id` of the single object in the `service` array must be a [valid URI](https://datatracker.ietf.org/doc/html/rfc3986)."}},required:["type","@id"]}],errorMessage:"Invalid image service. The property `service` of the annnotation target must be an array with a single object and required properties `type` and `@id`."},selector:{type:"object",properties:{type:{const:"SvgSelector"},value:{type:"string",pattern:'^<svg\\s+width="\\d+"\\sheight="\\d+"\\s*>\\s*<polygon\\s+points="(\\d+,\\d+\\s+){2,}\\d+,\\d+"\\s*\\/>\\s*<\\/svg>$'}},required:["type","value"],errorMessage:"Invalid selector. The property `selector` of the annotation target must be a valid SvgSelector with a single `<polygon>` element."}},additionalProperties:!1,required:["type","source","service","selector"],errorMessage:"Invalid annotation target. Annotation target must be an object with required properties `type`, `source`, `service`, and `selector`."},le=new RegExp('^<svg\\s+width="\\d+"\\sheight="\\d+"\\s*>\\s*<polygon\\s+points="(\\d+,\\d+\\s+){2,}\\d+,\\d+"\\s*\\/>\\s*<\\/svg>$',"u");var de={type:"object",properties:{type:{const:"Feature",errorMessage:'Invalid GCP in annotation body. Annotation body must be a GeoJSON FeatureCollection, each of its features must have property `type` with value `"Feature"`.'},id:{type:["integer","string"]},properties:{type:"object",properties:{pixelCoords:{$ref:"#/$defs/pixelCoord"}},additionalProperties:!1,required:["pixelCoords"]},geometry:{type:"object",properties:{type:{const:"Point"},coordinates:{type:"array",items:{type:"number"},minItems:2,maxItems:2,errorMessage:"Invalid GCP geometry. Annotation body must be a GeoJSON FeatureCollection and each Feature must have a Point geometry."}},additionalProperties:!1,required:["type","coordinates"],errorMessage:"Invalid GCP geometry. Annotation body must be a GeoJSON FeatureCollection and each Feature must have a Point geometry."}},additionalProperties:!1,required:["type","properties","geometry"],errorMessage:"Invalid GCP. Annotation body must be a GeoJSON FeatureCollection and each Feature must have a Point geometry and property `pixelCoord` (`[x, y]`) in its `properties` object."};function j(l,{instancePath:r="",parentData:f,parentDataProperty:g,rootData:y=l,dynamicAnchors:v={}}={}){let e=null,t=0,c=j.evaluated;if(c.dynamicProps&&(c.props=void 0),c.dynamicItems&&(c.items=void 0),l&&typeof l=="object"&&!Array.isArray(l)){if(l.type===void 0){let i={instancePath:r,schemaPath:"#/required",keyword:"required",params:{missingProperty:"type"},message:"must have required property 'type'"};e===null?e=[i]:e.push(i),t++}if(l.properties===void 0){let i={instancePath:r,schemaPath:"#/required",keyword:"required",params:{missingProperty:"properties"},message:"must have required property 'properties'"};e===null?e=[i]:e.push(i),t++}if(l.geometry===void 0){let i={instancePath:r,schemaPath:"#/required",keyword:"required",params:{missingProperty:"geometry"},message:"must have required property 'geometry'"};e===null?e=[i]:e.push(i),t++}for(let i in l)if(!(i==="type"||i==="id"||i==="properties"||i==="geometry")){let n={instancePath:r,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty:i},message:"must NOT have additional properties"};e===null?e=[n]:e.push(n),t++}if(l.type!==void 0){if(l.type!=="Feature"){let i={instancePath:r+"/type",schemaPath:"#/properties/type/const",keyword:"const",params:{allowedValue:"Feature"},message:"must be equal to constant"};e===null?e=[i]:e.push(i),t++}if(t>0){let i=[];for(let s of e)s.keyword!=="errorMessage"&&!s.emUsed&&(s.instancePath===r+"/type"||s.instancePath.indexOf(r+"/type")===0&&s.instancePath[r+"/type".length]==="/")&&s.schemaPath.indexOf("#/properties/type")===0&&s.schemaPath["#/properties/type".length]==="/"&&(i.push(s),s.emUsed=!0);if(i.length){let s={instancePath:r+"/type",schemaPath:"#/properties/type/errorMessage",keyword:"errorMessage",params:{errors:i},message:'Invalid GCP in annotation body. Annotation body must be a GeoJSON FeatureCollection, each of its features must have property `type` with value `"Feature"`.'};e===null?e=[s]:e.push(s),t++}let n=[];for(let s of e)s.emUsed||n.push(s);e=n,t=n.length}}if(l.id!==void 0){let i=l.id;if(!(typeof i=="number"&&!(i%1)&&!isNaN(i)&&isFinite(i))&&typeof i!="string"){let n={instancePath:r+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type:de.properties.id.type},message:"must be integer,string"};e===null?e=[n]:e.push(n),t++}}if(l.properties!==void 0){let i=l.properties;if(i&&typeof i=="object"&&!Array.isArray(i)){if(i.pixelCoords===void 0){let n={instancePath:r+"/properties",schemaPath:"#/properties/properties/required",keyword:"required",params:{missingProperty:"pixelCoords"},message:"must have required property 'pixelCoords'"};e===null?e=[n]:e.push(n),t++}for(let n in i)if(n!=="pixelCoords"){let s={instancePath:r+"/properties",schemaPath:"#/properties/properties/additionalProperties",keyword:"additionalProperties",params:{additionalProperty:n},message:"must NOT have additional properties"};e===null?e=[s]:e.push(s),t++}if(i.pixelCoords!==void 0){let n=i.pixelCoords;if(Array.isArray(n)){if(n.length>2){let a={instancePath:r+"/properties/pixelCoords",schemaPath:"#/$defs/pixelCoord/maxItems",keyword:"maxItems",params:{limit:2},message:"must NOT have more than 2 items"};e===null?e=[a]:e.push(a),t++}if(n.length<2){let a={instancePath:r+"/properties/pixelCoords",schemaPath:"#/$defs/pixelCoord/minItems",keyword:"minItems",params:{limit:2},message:"must NOT have fewer than 2 items"};e===null?e=[a]:e.push(a),t++}let s=n.length;for(let a=0;a<s;a++){let o=n[a];if(!(typeof o=="number"&&!(o%1)&&!isNaN(o)&&isFinite(o))){let m={instancePath:r+"/properties/pixelCoords/"+a,schemaPath:"#/$defs/pixelCoord/items/type",keyword:"type",params:{type:"integer"},message:"must be integer"};e===null?e=[m]:e.push(m),t++}}}else{let s={instancePath:r+"/properties/pixelCoords",schemaPath:"#/$defs/pixelCoord/type",keyword:"type",params:{type:"array"},message:"must be array"};e===null?e=[s]:e.push(s),t++}if(t>0){let s=[];for(let o of e)o.keyword!=="errorMessage"&&!o.emUsed&&(o.instancePath===r+"/properties/pixelCoords"||o.instancePath.indexOf(r+"/properties/pixelCoords")===0&&o.instancePath[r+"/properties/pixelCoords".length]==="/")&&o.schemaPath.indexOf("#/$defs/pixelCoord")===0&&o.schemaPath["#/$defs/pixelCoord".length]==="/"&&(s.push(o),o.emUsed=!0);if(s.length){let o={instancePath:r+"/properties/pixelCoords",schemaPath:"#/$defs/pixelCoord/errorMessage",keyword:"errorMessage",params:{errors:s},message:"Invalid GCP. Annotation body must be a GeoJSON FeatureCollection and each Feature must have a property `pixelCoord` (`[x, y]`) in its `properties` object."};e===null?e=[o]:e.push(o),t++}let a=[];for(let o of e)o.emUsed||a.push(o);e=a,t=a.length}}}else{let n={instancePath:r+"/properties",schemaPath:"#/properties/properties/type",keyword:"type",params:{type:"object"},message:"must be object"};e===null?e=[n]:e.push(n),t++}}if(l.geometry!==void 0){let i=l.geometry;if(i&&typeof i=="object"&&!Array.isArray(i)){if(i.type===void 0){let n={instancePath:r+"/geometry",schemaPath:"#/properties/geometry/required",keyword:"required",params:{missingProperty:"type"},message:"must have required property 'type'"};e===null?e=[n]:e.push(n),t++}if(i.coordinates===void 0){let n={instancePath:r+"/geometry",schemaPath:"#/properties/geometry/required",keyword:"required",params:{missingProperty:"coordinates"},message:"must have required property 'coordinates'"};e===null?e=[n]:e.push(n),t++}for(let n in i)if(!(n==="type"||n==="coordinates")){let s={instancePath:r+"/geometry",schemaPath:"#/properties/geometry/additionalProperties",keyword:"additionalProperties",params:{additionalProperty:n},message:"must NOT have additional properties"};e===null?e=[s]:e.push(s),t++}if(i.type!==void 0&&i.type!=="Point"){let n={instancePath:r+"/geometry/type",schemaPath:"#/properties/geometry/properties/type/const",keyword:"const",params:{allowedValue:"Point"},message:"must be equal to constant"};e===null?e=[n]:e.push(n),t++}if(i.coordinates!==void 0){let n=i.coordinates;if(Array.isArray(n)){if(n.length>2){let a={instancePath:r+"/geometry/coordinates",schemaPath:"#/properties/geometry/properties/coordinates/maxItems",keyword:"maxItems",params:{limit:2},message:"must NOT have more than 2 items"};e===null?e=[a]:e.push(a),t++}if(n.length<2){let a={instancePath:r+"/geometry/coordinates",schemaPath:"#/properties/geometry/properties/coordinates/minItems",keyword:"minItems",params:{limit:2},message:"must NOT have fewer than 2 items"};e===null?e=[a]:e.push(a),t++}let s=n.length;for(let a=0;a<s;a++){let o=n[a];if(!(typeof o=="number"&&isFinite(o))){let m={instancePath:r+"/geometry/coordinates/"+a,schemaPath:"#/properties/geometry/properties/coordinates/items/type",keyword:"type",params:{type:"number"},message:"must be number"};e===null?e=[m]:e.push(m),t++}}}else{let s={instancePath:r+"/geometry/coordinates",schemaPath:"#/properties/geometry/properties/coordinates/type",keyword:"type",params:{type:"array"},message:"must be array"};e===null?e=[s]:e.push(s),t++}if(t>0){let s=[];for(let o of e)o.keyword!=="errorMessage"&&!o.emUsed&&(o.instancePath===r+"/geometry/coordinates"||o.instancePath.indexOf(r+"/geometry/coordinates")===0&&o.instancePath[r+"/geometry/coordinates".length]==="/")&&o.schemaPath.indexOf("#/properties/geometry/properties/coordinates")===0&&o.schemaPath["#/properties/geometry/properties/coordinates".length]==="/"&&(s.push(o),o.emUsed=!0);if(s.length){let o={instancePath:r+"/geometry/coordinates",schemaPath:"#/properties/geometry/properties/coordinates/errorMessage",keyword:"errorMessage",params:{errors:s},message:"Invalid GCP geometry. Annotation body must be a GeoJSON FeatureCollection and each Feature must have a Point geometry."};e===null?e=[o]:e.push(o),t++}let a=[];for(let o of e)o.emUsed||a.push(o);e=a,t=a.length}}}else{let n={instancePath:r+"/geometry",schemaPath:"#/properties/geometry/type",keyword:"type",params:{type:"object"},message:"must be object"};e===null?e=[n]:e.push(n),t++}if(t>0){let n=[];for(let a of e)a.keyword!=="errorMessage"&&!a.emUsed&&(a.instancePath===r+"/geometry"||a.instancePath.indexOf(r+"/geometry")===0&&a.instancePath[r+"/geometry".length]==="/")&&a.schemaPath.indexOf("#/properties/geometry")===0&&a.schemaPath["#/properties/geometry".length]==="/"&&(n.push(a),a.emUsed=!0);if(n.length){let a={instancePath:r+"/geometry",schemaPath:"#/properties/geometry/errorMessage",keyword:"errorMessage",params:{errors:n},message:"Invalid GCP geometry. Annotation body must be a GeoJSON FeatureCollection and each Feature must have a Point geometry."};e===null?e=[a]:e.push(a),t++}let s=[];for(let a of e)a.emUsed||s.push(a);e=s,t=s.length}}}else{let i={instancePath:r,schemaPath:"#/type",keyword:"type",params:{type:"object"},message:"must be object"};e===null?e=[i]:e.push(i),t++}if(t>0){let i=[];for(let s of e)s.keyword!=="errorMessage"&&!s.emUsed&&(s.instancePath===r||s.instancePath.indexOf(r)===0&&s.instancePath[r.length]==="/")&&s.schemaPath.indexOf("#")===0&&s.schemaPath["#".length]==="/"&&(i.push(s),s.emUsed=!0);if(i.length){let s={instancePath:r,schemaPath:"#/errorMessage",keyword:"errorMessage",params:{errors:i},message:"Invalid GCP. Annotation body must be a GeoJSON FeatureCollection and each Feature must have a Point geometry and property `pixelCoord` (`[x, y]`) in its `properties` object."};e===null?e=[s]:e.push(s),t++}let n=[];for(let s of e)s.emUsed||n.push(s);e=n,t=n.length}return j.errors=e,t===0}j.evaluated={props:!0,dynamicProps:!1,dynamicItems:!1};function M(l,{instancePath:r="",parentData:f,parentDataProperty:g,rootData:y=l,dynamicAnchors:v={}}={}){let e=null,t=0,c=M.evaluated;if(c.dynamicProps&&(c.props=void 0),c.dynamicItems&&(c.items=void 0),l&&typeof l=="object"&&!Array.isArray(l)){if(l.type===void 0){let i={instancePath:r,schemaPath:"#/required",keyword:"required",params:{missingProperty:"type"},message:"must have required property 'type'"};e===null?e=[i]:e.push(i),t++}if(l.features===void 0){let i={instancePath:r,schemaPath:"#/required",keyword:"required",params:{missingProperty:"features"},message:"must have required property 'features'"};e===null?e=[i]:e.push(i),t++}for(let i in l)if(!(i==="type"||i==="purpose"||i==="transformation"||i==="features")){let n={instancePath:r,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty:i},message:"must NOT have additional properties"};e===null?e=[n]:e.push(n),t++}if(l.type!==void 0){if(l.type!=="FeatureCollection"){let i={instancePath:r+"/type",schemaPath:"#/properties/type/const",keyword:"const",params:{allowedValue:"FeatureCollection"},message:"must be equal to constant"};e===null?e=[i]:e.push(i),t++}if(t>0){let i=[];for(let s of e)s.keyword!=="errorMessage"&&!s.emUsed&&(s.instancePath===r+"/type"||s.instancePath.indexOf(r+"/type")===0&&s.instancePath[r+"/type".length]==="/")&&s.schemaPath.indexOf("#/properties/type")===0&&s.schemaPath["#/properties/type".length]==="/"&&(i.push(s),s.emUsed=!0);if(i.length){let s={instancePath:r+"/type",schemaPath:"#/properties/type/errorMessage",keyword:"errorMessage",params:{errors:i},message:'Invalid annotation body. Annotation body must be a GeoJSON FeatureCollection and have a property `type` with value `"FeatureCollection"`.'};e===null?e=[s]:e.push(s),t++}let n=[];for(let s of e)s.emUsed||n.push(s);e=n,t=n.length}}if(l.purpose!==void 0){if(l.purpose!=="gcp-georeferencing"){let i={instancePath:r+"/purpose",schemaPath:"#/properties/purpose/const",keyword:"const",params:{allowedValue:"gcp-georeferencing"},message:"must be equal to constant"};e===null?e=[i]:e.push(i),t++}if(t>0){let i=[];for(let s of e)s.keyword!=="errorMessage"&&!s.emUsed&&(s.instancePath===r+"/purpose"||s.instancePath.indexOf(r+"/purpose")===0&&s.instancePath[r+"/purpose".length]==="/")&&s.schemaPath.indexOf("#/properties/purpose")===0&&s.schemaPath["#/properties/purpose".length]==="/"&&(i.push(s),s.emUsed=!0);if(i.length){let s={instancePath:r+"/purpose",schemaPath:"#/properties/purpose/errorMessage",keyword:"errorMessage",params:{errors:i},message:'Invalid purpose in annotation body. Annotation property `body` must be a GeoJSON FeatureCollection and should have property `purpose` with value `"gcp-georeferencing"`.'};e===null?e=[s]:e.push(s),t++}let n=[];for(let s of e)s.emUsed||n.push(s);e=n,t=n.length}}if(l.transformation!==void 0){let i=l.transformation;if(!(i&&typeof i=="object"&&!Array.isArray(i))){let n={instancePath:r+"/transformation",schemaPath:"#/properties/transformation/type",keyword:"type",params:{type:"object"},message:"must be object"};e===null?e=[n]:e.push(n),t++}if(t>0){let n=[];for(let a of e)a.keyword!=="errorMessage"&&!a.emUsed&&(a.instancePath===r+"/transformation"||a.instancePath.indexOf(r+"/transformation")===0&&a.instancePath[r+"/transformation".length]==="/")&&a.schemaPath.indexOf("#/properties/transformation")===0&&a.schemaPath["#/properties/transformation".length]==="/"&&(n.push(a),a.emUsed=!0);if(n.length){let a={instancePath:r+"/transformation",schemaPath:"#/properties/transformation/errorMessage",keyword:"errorMessage",params:{errors:n},message:"Invalid transformation. Annotation property `body` must be a GeoJSON FeatureCollection and should have object property `transformation` with metadata for the transformation algorithm."};e===null?e=[a]:e.push(a),t++}let s=[];for(let a of e)a.emUsed||s.push(a);e=s,t=s.length}}if(l.features!==void 0){let i=l.features;if(Array.isArray(i)){let n=i.length;for(let s=0;s<n;s++)j(i[s],{instancePath:r+"/features/"+s,parentData:i,parentDataProperty:s,rootData:y,dynamicAnchors:v})||(e=e===null?j.errors:e.concat(j.errors),t=e.length)}else{let n={instancePath:r+"/features",schemaPath:"#/properties/features/type",keyword:"type",params:{type:"array"},message:"must be array"};e===null?e=[n]:e.push(n),t++}}}else{let i={instancePath:r,schemaPath:"#/type",keyword:"type",params:{type:"object"},message:"must be object"};e===null?e=[i]:e.push(i),t++}if(t>0){let i=[];for(let s of e)s.keyword!=="errorMessage"&&!s.emUsed&&(s.instancePath===r||s.instancePath.indexOf(r)===0&&s.instancePath[r.length]==="/")&&s.schemaPath.indexOf("#")===0&&s.schemaPath["#".length]==="/"&&(i.push(s),s.emUsed=!0);if(i.length){let s={instancePath:r,schemaPath:"#/errorMessage",keyword:"errorMessage",params:{errors:i},message:"Invalid annotation body. Annotation body must be an object with required properties `type`, `@context`, `target`, `body`."};e===null?e=[s]:e.push(s),t++}let n=[];for(let s of e)s.emUsed||n.push(s);e=n,t=n.length}return M.errors=e,t===0}M.evaluated={props:!0,dynamicProps:!1,dynamicItems:!1};function x(l,{instancePath:r="",parentData:f,parentDataProperty:g,rootData:y=l,dynamicAnchors:v={}}={}){let e=null,t=0,c=x.evaluated;if(c.dynamicProps&&(c.props=void 0),c.dynamicItems&&(c.items=void 0),l&&typeof l=="object"&&!Array.isArray(l)){if(l.type===void 0){let a={instancePath:r,schemaPath:"#/required",keyword:"required",params:{missingProperty:"type"},message:"must have required property 'type'"};e===null?e=[a]:e.push(a),t++}if(l.target===void 0){let a={instancePath:r,schemaPath:"#/required",keyword:"required",params:{missingProperty:"target"},message:"must have required property 'target'"};e===null?e=[a]:e.push(a),t++}if(l.body===void 0){let a={instancePath:r,schemaPath:"#/required",keyword:"required",params:{missingProperty:"body"},message:"must have required property 'body'"};e===null?e=[a]:e.push(a),t++}for(let a in l)if(!(a==="type"||a==="id"||a==="@context"||a==="motivation"||a==="target"||a==="body")){let o={instancePath:r,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty:a},message:"must NOT have additional properties"};e===null?e=[o]:e.push(o),t++}if(l.type!==void 0){if(l.type!=="Annotation"){let a={instancePath:r+"/type",schemaPath:"#/properties/type/const",keyword:"const",params:{allowedValue:"Annotation"},message:"must be equal to constant"};e===null?e=[a]:e.push(a),t++}if(t>0){let a=[];for(let m of e)m.keyword!=="errorMessage"&&!m.emUsed&&(m.instancePath===r+"/type"||m.instancePath.indexOf(r+"/type")===0&&m.instancePath[r+"/type".length]==="/")&&m.schemaPath.indexOf("#/properties/type")===0&&m.schemaPath["#/properties/type".length]==="/"&&(a.push(m),m.emUsed=!0);if(a.length){let m={instancePath:r+"/type",schemaPath:"#/properties/type/errorMessage",keyword:"errorMessage",params:{errors:a},message:'Invalid annotation type. Annotation must have property `type` with value `"Annotation"`.'};e===null?e=[m]:e.push(m),t++}let o=[];for(let m of e)m.emUsed||o.push(m);e=o,t=o.length}}if(l.id!==void 0){let a=l.id;if(typeof a=="string"){if(!k(a)){let o={instancePath:r+"/id",schemaPath:"#/properties/id/format",keyword:"format",params:{format:"uri"},message:'must match format "uri"'};e===null?e=[o]:e.push(o),t++}}else{let o={instancePath:r+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type:"string"},message:"must be string"};e===null?e=[o]:e.push(o),t++}if(t>0){let o=[];for(let p of e)p.keyword!=="errorMessage"&&!p.emUsed&&(p.instancePath===r+"/id"||p.instancePath.indexOf(r+"/id")===0&&p.instancePath[r+"/id".length]==="/")&&p.schemaPath.indexOf("#/properties/id")===0&&p.schemaPath["#/properties/id".length]==="/"&&(o.push(p),p.emUsed=!0);if(o.length){let p={instancePath:r+"/id",schemaPath:"#/properties/id/errorMessage",keyword:"errorMessage",params:{errors:o},message:"Invalid annotation ID. Optional property `id` must be a [valid URI](https://datatracker.ietf.org/doc/html/rfc3986)."};e===null?e=[p]:e.push(p),t++}let m=[];for(let p of e)p.emUsed||m.push(p);e=m,t=m.length}}if(l["@context"]!==void 0){let a=l["@context"];if(Array.isArray(a)){let o=t,m=a.length;for(let p=0;p<m;p++){let d=t;if(a[p]!=="http://www.w3.org/ns/anno.jsonld"){let u={instancePath:r+"/@context/"+p,schemaPath:"#/$defs/context/allOf/0/contains/const",keyword:"const",params:{allowedValue:"http://www.w3.org/ns/anno.jsonld"},message:"must be equal to constant"};e===null?e=[u]:e.push(u),t++}var i=d===t;if(i)break}if(i)t=o,e!==null&&(o?e.length=o:e=null);else{let p={instancePath:r+"/@context",schemaPath:"#/$defs/context/allOf/0/contains",keyword:"contains",params:{minContains:1},message:"must contain at least 1 valid item(s)"};e===null?e=[p]:e.push(p),t++}}if(Array.isArray(a)){let o=t,m=a.length;for(let p=0;p<m;p++){let d=t;if(a[p]!=="http://geojson.org/geojson-ld/geojson-context.jsonld"){let u={instancePath:r+"/@context/"+p,schemaPath:"#/$defs/context/allOf/1/contains/const",keyword:"const",params:{allowedValue:"http://geojson.org/geojson-ld/geojson-context.jsonld"},message:"must be equal to constant"};e===null?e=[u]:e.push(u),t++}var n=d===t;if(n)break}if(n)t=o,e!==null&&(o?e.length=o:e=null);else{let p={instancePath:r+"/@context",schemaPath:"#/$defs/context/allOf/1/contains",keyword:"contains",params:{minContains:1},message:"must contain at least 1 valid item(s)"};e===null?e=[p]:e.push(p),t++}}if(Array.isArray(a)){let o=t,m=a.length;for(let p=0;p<m;p++){let d=t;if(a[p]!=="http://iiif.io/api/presentation/3/context.json"){let u={instancePath:r+"/@context/"+p,schemaPath:"#/$defs/context/allOf/2/contains/const",keyword:"const",params:{allowedValue:"http://iiif.io/api/presentation/3/context.json"},message:"must be equal to constant"};e===null?e=[u]:e.push(u),t++}var s=d===t;if(s)break}if(s)t=o,e!==null&&(o?e.length=o:e=null);else{let p={instancePath:r+"/@context",schemaPath:"#/$defs/context/allOf/2/contains",keyword:"contains",params:{minContains:1},message:"must contain at least 1 valid item(s)"};e===null?e=[p]:e.push(p),t++}}if(Array.isArray(a)){let o=a.length;for(let m=0;m<o;m++){let p=a[m];if(typeof p=="string"){if(!k(p)){let d={instancePath:r+"/@context/"+m,schemaPath:"#/$defs/context/items/format",keyword:"format",params:{format:"uri"},message:'must match format "uri"'};e===null?e=[d]:e.push(d),t++}}else{let d={instancePath:r+"/@context/"+m,schemaPath:"#/$defs/context/items/type",keyword:"type",params:{type:"string"},message:"must be string"};e===null?e=[d]:e.push(d),t++}}}else{let o={instancePath:r+"/@context",schemaPath:"#/$defs/context/type",keyword:"type",params:{type:"array"},message:"must be array"};e===null?e=[o]:e.push(o),t++}if(t>0){let o=[];for(let p of e)p.keyword!=="errorMessage"&&!p.emUsed&&(p.instancePath===r+"/@context"||p.instancePath.indexOf(r+"/@context")===0&&p.instancePath[r+"/@context".length]==="/")&&p.schemaPath.indexOf("#/$defs/context")===0&&p.schemaPath["#/$defs/context".length]==="/"&&(o.push(p),p.emUsed=!0);if(o.length){let p={instancePath:r+"/@context",schemaPath:"#/$defs/context/errorMessage",keyword:"errorMessage",params:{errors:o},message:'Invalid JSON-LD context. Property `@context` must be an array containing all of the following URLs: `"http://www.w3.org/ns/anno.jsonld"`, `"http://geojson.org/geojson-ld/geojson-context.jsonld"` and `http://iiif.io/api/presentation/3/context.json"`.'};e===null?e=[p]:e.push(p),t++}let m=[];for(let p of e)p.emUsed||m.push(p);e=m,t=m.length}}if(l.motivation!==void 0){if(l.motivation!=="georeferencing"){let a={instancePath:r+"/motivation",schemaPath:"#/properties/motivation/const",keyword:"const",params:{allowedValue:"georeferencing"},message:"must be equal to constant"};e===null?e=[a]:e.push(a),t++}if(t>0){let a=[];for(let m of e)m.keyword!=="errorMessage"&&!m.emUsed&&(m.instancePath===r+"/motivation"||m.instancePath.indexOf(r+"/motivation")===0&&m.instancePath[r+"/motivation".length]==="/")&&m.schemaPath.indexOf("#/properties/motivation")===0&&m.schemaPath["#/properties/motivation".length]==="/"&&(a.push(m),m.emUsed=!0);if(a.length){let m={instancePath:r+"/motivation",schemaPath:"#/properties/motivation/errorMessage",keyword:"errorMessage",params:{errors:a},message:'Invalid motivation. Annotation should have property `motivation` with value `"georeferencing"`.'};e===null?e=[m]:e.push(m),t++}let o=[];for(let m of e)m.emUsed||o.push(m);e=o,t=o.length}}if(l.target!==void 0){let a=l.target;if(a&&typeof a=="object"&&!Array.isArray(a)){if(a.type===void 0){let o={instancePath:r+"/target",schemaPath:"#/$defs/target/required",keyword:"required",params:{missingProperty:"type"},message:"must have required property 'type'"};e===null?e=[o]:e.push(o),t++}if(a.source===void 0){let o={instancePath:r+"/target",schemaPath:"#/$defs/target/required",keyword:"required",params:{missingProperty:"source"},message:"must have required property 'source'"};e===null?e=[o]:e.push(o),t++}if(a.service===void 0){let o={instancePath:r+"/target",schemaPath:"#/$defs/target/required",keyword:"required",params:{missingProperty:"service"},message:"must have required property 'service'"};e===null?e=[o]:e.push(o),t++}if(a.selector===void 0){let o={instancePath:r+"/target",schemaPath:"#/$defs/target/required",keyword:"required",params:{missingProperty:"selector"},message:"must have required property 'selector'"};e===null?e=[o]:e.push(o),t++}for(let o in a)if(!(o==="type"||o==="source"||o==="service"||o==="selector")){let m={instancePath:r+"/target",schemaPath:"#/$defs/target/additionalProperties",keyword:"additionalProperties",params:{additionalProperty:o},message:"must NOT have additional properties"};e===null?e=[m]:e.push(m),t++}if(a.type!==void 0){if(a.type!=="Image"){let o={instancePath:r+"/target/type",schemaPath:"#/$defs/target/properties/type/const",keyword:"const",params:{allowedValue:"Image"},message:"must be equal to constant"};e===null?e=[o]:e.push(o),t++}if(t>0){let o=[];for(let p of e)p.keyword!=="errorMessage"&&!p.emUsed&&(p.instancePath===r+"/target/type"||p.instancePath.indexOf(r+"/target/type")===0&&p.instancePath[r+"/target/type".length]==="/")&&p.schemaPath.indexOf("#/$defs/target/properties/type")===0&&p.schemaPath["#/$defs/target/properties/type".length]==="/"&&(o.push(p),p.emUsed=!0);if(o.length){let p={instancePath:r+"/target/type",schemaPath:"#/$defs/target/properties/type/errorMessage",keyword:"errorMessage",params:{errors:o},message:'Invalid annotation target. The property `type` of the annotation target must have value `"Image"`.'};e===null?e=[p]:e.push(p),t++}let m=[];for(let p of e)p.emUsed||m.push(p);e=m,t=m.length}}if(a.source!==void 0){let o=a.source;if(typeof o=="string"){if(!k(o)){let m={instancePath:r+"/target/source",schemaPath:"#/$defs/target/properties/source/format",keyword:"format",params:{format:"uri"},message:'must match format "uri"'};e===null?e=[m]:e.push(m),t++}}else{let m={instancePath:r+"/target/source",schemaPath:"#/$defs/target/properties/source/type",keyword:"type",params:{type:"string"},message:"must be string"};e===null?e=[m]:e.push(m),t++}if(t>0){let m=[];for(let d of e)d.keyword!=="errorMessage"&&!d.emUsed&&(d.instancePath===r+"/target/source"||d.instancePath.indexOf(r+"/target/source")===0&&d.instancePath[r+"/target/source".length]==="/")&&d.schemaPath.indexOf("#/$defs/target/properties/source")===0&&d.schemaPath["#/$defs/target/properties/source".length]==="/"&&(m.push(d),d.emUsed=!0);if(m.length){let d={instancePath:r+"/target/source",schemaPath:"#/$defs/target/properties/source/errorMessage",keyword:"errorMessage",params:{errors:m},message:"Invalid annotation target. The property `source` of the annotation target must be a valid IIIF Image API URI."};e===null?e=[d]:e.push(d),t++}let p=[];for(let d of e)d.emUsed||p.push(d);e=p,t=p.length}}if(a.service!==void 0){let o=a.service;if(Array.isArray(o)){if(o.length>1){let p={instancePath:r+"/target/service",schemaPath:"#/$defs/target/properties/service/maxItems",keyword:"maxItems",params:{limit:1},message:"must NOT have more than 1 items"};e===null?e=[p]:e.push(p),t++}if(o.length<1){let p={instancePath:r+"/target/service",schemaPath:"#/$defs/target/properties/service/minItems",keyword:"minItems",params:{limit:1},message:"must NOT have fewer than 1 items"};e===null?e=[p]:e.push(p),t++}if(o.length>0){let p=o[0];if(p&&typeof p=="object"&&!Array.isArray(p)){if(p.type===void 0){let d={instancePath:r+"/target/service/0",schemaPath:"#/$defs/target/properties/service/prefixItems/0/required",keyword:"required",params:{missingProperty:"type"},message:"must have required property 'type'"};e===null?e=[d]:e.push(d),t++}if(p["@id"]===void 0){let d={instancePath:r+"/target/service/0",schemaPath:"#/$defs/target/properties/service/prefixItems/0/required",keyword:"required",params:{missingProperty:"@id"},message:"must have required property '@id'"};e===null?e=[d]:e.push(d),t++}if(p.type!==void 0){let d=p.type;if(typeof d!="string"){let u={instancePath:r+"/target/service/0/type",schemaPath:"#/$defs/target/properties/service/prefixItems/0/properties/type/type",keyword:"type",params:{type:"string"},message:"must be string"};e===null?e=[u]:e.push(u),t++}if(!(d==="ImageService2"||d==="ImageService3")){let u={instancePath:r+"/target/service/0/type",schemaPath:"#/$defs/target/properties/service/prefixItems/0/properties/type/enum",keyword:"enum",params:{allowedValues:me.properties.service.prefixItems[0].properties.type.enum},message:"must be equal to one of the allowed values"};e===null?e=[u]:e.push(u),t++}if(t>0){let u=[];for(let h of e)h.keyword!=="errorMessage"&&!h.emUsed&&(h.instancePath===r+"/target/service/0/type"||h.instancePath.indexOf(r+"/target/service/0/type")===0&&h.instancePath[r+"/target/service/0/type".length]==="/")&&h.schemaPath.indexOf("#/$defs/target/properties/service/prefixItems/0/properties/type")===0&&h.schemaPath["#/$defs/target/properties/service/prefixItems/0/properties/type".length]==="/"&&(u.push(h),h.emUsed=!0);if(u.length){let h={instancePath:r+"/target/service/0/type",schemaPath:"#/$defs/target/properties/service/prefixItems/0/properties/type/errorMessage",keyword:"errorMessage",params:{errors:u},message:'Invalid image service, only IIIF Image API 2.0 and 3.0 are supported. The property `type` of the single object in the `service` array must be either `"ImageService2"` or `"ImageService3"`.'};e===null?e=[h]:e.push(h),t++}let P=[];for(let h of e)h.emUsed||P.push(h);e=P,t=P.length}}if(p["@id"]!==void 0){let d=p["@id"];if(typeof d=="string"){if(!k(d)){let u={instancePath:r+"/target/service/0/@id",schemaPath:"#/$defs/target/properties/service/prefixItems/0/properties/%40id/format",keyword:"format",params:{format:"uri"},message:'must match format "uri"'};e===null?e=[u]:e.push(u),t++}}else{let u={instancePath:r+"/target/service/0/@id",schemaPath:"#/$defs/target/properties/service/prefixItems/0/properties/%40id/type",keyword:"type",params:{type:"string"},message:"must be string"};e===null?e=[u]:e.push(u),t++}if(t>0){let u=[];for(let h of e)h.keyword!=="errorMessage"&&!h.emUsed&&(h.instancePath===r+"/target/service/0/@id"||h.instancePath.indexOf(r+"/target/service/0/@id")===0&&h.instancePath[r+"/target/service/0/@id".length]==="/")&&h.schemaPath.indexOf("#/$defs/target/properties/service/prefixItems/0/properties/%40id")===0&&h.schemaPath["#/$defs/target/properties/service/prefixItems/0/properties/%40id".length]==="/"&&(u.push(h),h.emUsed=!0);if(u.length){let h={instancePath:r+"/target/service/0/@id",schemaPath:"#/$defs/target/properties/service/prefixItems/0/properties/%40id/errorMessage",keyword:"errorMessage",params:{errors:u},message:"Invalid image serice. The property `@id` of the single object in the `service` array must be a [valid URI](https://datatracker.ietf.org/doc/html/rfc3986)."};e===null?e=[h]:e.push(h),t++}let P=[];for(let h of e)h.emUsed||P.push(h);e=P,t=P.length}}}else{let d={instancePath:r+"/target/service/0",schemaPath:"#/$defs/target/properties/service/prefixItems/0/type",keyword:"type",params:{type:"object"},message:"must be object"};e===null?e=[d]:e.push(d),t++}}}else{let m={instancePath:r+"/target/service",schemaPath:"#/$defs/target/properties/service/type",keyword:"type",params:{type:"array"},message:"must be array"};e===null?e=[m]:e.push(m),t++}if(t>0){let m=[];for(let d of e)d.keyword!=="errorMessage"&&!d.emUsed&&(d.instancePath===r+"/target/service"||d.instancePath.indexOf(r+"/target/service")===0&&d.instancePath[r+"/target/service".length]==="/")&&d.schemaPath.indexOf("#/$defs/target/properties/service")===0&&d.schemaPath["#/$defs/target/properties/service".length]==="/"&&(m.push(d),d.emUsed=!0);if(m.length){let d={instancePath:r+"/target/service",schemaPath:"#/$defs/target/properties/service/errorMessage",keyword:"errorMessage",params:{errors:m},message:"Invalid image service. The property `service` of the annnotation target must be an array with a single object and required properties `type` and `@id`."};e===null?e=[d]:e.push(d),t++}let p=[];for(let d of e)d.emUsed||p.push(d);e=p,t=p.length}}if(a.selector!==void 0){let o=a.selector;if(o&&typeof o=="object"&&!Array.isArray(o)){if(o.type===void 0){let m={instancePath:r+"/target/selector",schemaPath:"#/$defs/target/properties/selector/required",keyword:"required",params:{missingProperty:"type"},message:"must have required property 'type'"};e===null?e=[m]:e.push(m),t++}if(o.value===void 0){let m={instancePath:r+"/target/selector",schemaPath:"#/$defs/target/properties/selector/required",keyword:"required",params:{missingProperty:"value"},message:"must have required property 'value'"};e===null?e=[m]:e.push(m),t++}if(o.type!==void 0&&o.type!=="SvgSelector"){let m={instancePath:r+"/target/selector/type",schemaPath:"#/$defs/target/properties/selector/properties/type/const",keyword:"const",params:{allowedValue:"SvgSelector"},message:"must be equal to constant"};e===null?e=[m]:e.push(m),t++}if(o.value!==void 0){let m=o.value;if(typeof m=="string"){if(!le.test(m)){let p={instancePath:r+"/target/selector/value",schemaPath:"#/$defs/target/properties/selector/properties/value/pattern",keyword:"pattern",params:{pattern:'^<svg\\s+width="\\d+"\\sheight="\\d+"\\s*>\\s*<polygon\\s+points="(\\d+,\\d+\\s+){2,}\\d+,\\d+"\\s*\\/>\\s*<\\/svg>$'},message:'must match pattern "^<svg\\s+width="\\d+"\\sheight="\\d+"\\s*>\\s*<polygon\\s+points="(\\d+,\\d+\\s+){2,}\\d+,\\d+"\\s*\\/>\\s*<\\/svg>$"'};e===null?e=[p]:e.push(p),t++}}else{let p={instancePath:r+"/target/selector/value",schemaPath:"#/$defs/target/properties/selector/properties/value/type",keyword:"type",params:{type:"string"},message:"must be string"};e===null?e=[p]:e.push(p),t++}}}else{let m={instancePath:r+"/target/selector",schemaPath:"#/$defs/target/properties/selector/type",keyword:"type",params:{type:"object"},message:"must be object"};e===null?e=[m]:e.push(m),t++}if(t>0){let m=[];for(let d of e)d.keyword!=="errorMessage"&&!d.emUsed&&(d.instancePath===r+"/target/selector"||d.instancePath.indexOf(r+"/target/selector")===0&&d.instancePath[r+"/target/selector".length]==="/")&&d.schemaPath.indexOf("#/$defs/target/properties/selector")===0&&d.schemaPath["#/$defs/target/properties/selector".length]==="/"&&(m.push(d),d.emUsed=!0);if(m.length){let d={instancePath:r+"/target/selector",schemaPath:"#/$defs/target/properties/selector/errorMessage",keyword:"errorMessage",params:{errors:m},message:"Invalid selector. The property `selector` of the annotation target must be a valid SvgSelector with a single `<polygon>` element."};e===null?e=[d]:e.push(d),t++}let p=[];for(let d of e)d.emUsed||p.push(d);e=p,t=p.length}}}else{let o={instancePath:r+"/target",schemaPath:"#/$defs/target/type",keyword:"type",params:{type:"object"},message:"must be object"};e===null?e=[o]:e.push(o),t++}if(t>0){let o=[];for(let p of e)p.keyword!=="errorMessage"&&!p.emUsed&&(p.instancePath===r+"/target"||p.instancePath.indexOf(r+"/target")===0&&p.instancePath[r+"/target".length]==="/")&&p.schemaPath.indexOf("#/$defs/target")===0&&p.schemaPath["#/$defs/target".length]==="/"&&(o.push(p),p.emUsed=!0);if(o.length){let p={instancePath:r+"/target",schemaPath:"#/$defs/target/errorMessage",keyword:"errorMessage",params:{errors:o},message:"Invalid annotation target. Annotation target must be an object with required properties `type`, `source`, `service`, and `selector`."};e===null?e=[p]:e.push(p),t++}let m=[];for(let p of e)p.emUsed||m.push(p);e=m,t=m.length}}l.body!==void 0&&(M(l.body,{instancePath:r+"/body",parentData:l,parentDataProperty:"body",rootData:y,dynamicAnchors:v})||(e=e===null?M.errors:e.concat(M.errors),t=e.length))}else{let a={instancePath:r,schemaPath:"#/type",keyword:"type",params:{type:"object"},message:"must be object"};e===null?e=[a]:e.push(a),t++}if(t>0){let a=[];for(let m of e)m.keyword!=="errorMessage"&&!m.emUsed&&(m.instancePath===r||m.instancePath.indexOf(r)===0&&m.instancePath[r.length]==="/")&&m.schemaPath.indexOf("#")===0&&m.schemaPath["#".length]==="/"&&(a.push(m),m.emUsed=!0);if(a.length){let m={instancePath:r,schemaPath:"#/errorMessage",keyword:"errorMessage",params:{errors:a},message:"Invalid annotation. Annotation must be an object with required properties `type`, `@context`, `target` and `body`."};e===null?e=[m]:e.push(m),t++}let o=[];for(let m of e)m.emUsed||o.push(m);e=o,t=o.length}return x.errors=e,t===0}x.evaluated={props:!0,dynamicProps:!1,dynamicItems:!1};var Pe=q;function q(l,{instancePath:r="",parentData:f,parentDataProperty:g,rootData:y=l,dynamicAnchors:v={}}={}){let e=null,t=0,c=q.evaluated;if(c.dynamicProps&&(c.props=void 0),c.dynamicItems&&(c.items=void 0),l&&typeof l=="object"&&!Array.isArray(l)){if(l.type===void 0){let a={instancePath:r,schemaPath:"#/required",keyword:"required",params:{missingProperty:"type"},message:"must have required property 'type'"};e===null?e=[a]:e.push(a),t++}if(l.items===void 0){let a={instancePath:r,schemaPath:"#/required",keyword:"required",params:{missingProperty:"items"},message:"must have required property 'items'"};e===null?e=[a]:e.push(a),t++}if(l.type!==void 0&&l.type!=="AnnotationPage"){let a={instancePath:r+"/type",schemaPath:"#/properties/type/const",keyword:"const",params:{allowedValue:"AnnotationPage"},message:"must be equal to constant"};e===null?e=[a]:e.push(a),t++}if(l["@context"]!==void 0){let a=l["@context"];if(Array.isArray(a)){let o=t,m=a.length;for(let p=0;p<m;p++){let d=t;if(a[p]!=="http://www.w3.org/ns/anno.jsonld"){let u={instancePath:r+"/@context/"+p,schemaPath:"https://allmaps.org/annotation/schemas/annotation.json#/$defs/context/allOf/0/contains/const",keyword:"const",params:{allowedValue:"http://www.w3.org/ns/anno.jsonld"},message:"must be equal to constant"};e===null?e=[u]:e.push(u),t++}var i=d===t;if(i)break}if(i)t=o,e!==null&&(o?e.length=o:e=null);else{let p={instancePath:r+"/@context",schemaPath:"https://allmaps.org/annotation/schemas/annotation.json#/$defs/context/allOf/0/contains",keyword:"contains",params:{minContains:1},message:"must contain at least 1 valid item(s)"};e===null?e=[p]:e.push(p),t++}}if(Array.isArray(a)){let o=t,m=a.length;for(let p=0;p<m;p++){let d=t;if(a[p]!=="http://geojson.org/geojson-ld/geojson-context.jsonld"){let u={instancePath:r+"/@context/"+p,schemaPath:"https://allmaps.org/annotation/schemas/annotation.json#/$defs/context/allOf/1/contains/const",keyword:"const",params:{allowedValue:"http://geojson.org/geojson-ld/geojson-context.jsonld"},message:"must be equal to constant"};e===null?e=[u]:e.push(u),t++}var n=d===t;if(n)break}if(n)t=o,e!==null&&(o?e.length=o:e=null);else{let p={instancePath:r+"/@context",schemaPath:"https://allmaps.org/annotation/schemas/annotation.json#/$defs/context/allOf/1/contains",keyword:"contains",params:{minContains:1},message:"must contain at least 1 valid item(s)"};e===null?e=[p]:e.push(p),t++}}if(Array.isArray(a)){let o=t,m=a.length;for(let p=0;p<m;p++){let d=t;if(a[p]!=="http://iiif.io/api/presentation/3/context.json"){let u={instancePath:r+"/@context/"+p,schemaPath:"https://allmaps.org/annotation/schemas/annotation.json#/$defs/context/allOf/2/contains/const",keyword:"const",params:{allowedValue:"http://iiif.io/api/presentation/3/context.json"},message:"must be equal to constant"};e===null?e=[u]:e.push(u),t++}var s=d===t;if(s)break}if(s)t=o,e!==null&&(o?e.length=o:e=null);else{let p={instancePath:r+"/@context",schemaPath:"https://allmaps.org/annotation/schemas/annotation.json#/$defs/context/allOf/2/contains",keyword:"contains",params:{minContains:1},message:"must contain at least 1 valid item(s)"};e===null?e=[p]:e.push(p),t++}}if(Array.isArray(a)){let o=a.length;for(let m=0;m<o;m++){let p=a[m];if(typeof p=="string"){if(!k(p)){let d={instancePath:r+"/@context/"+m,schemaPath:"https://allmaps.org/annotation/schemas/annotation.json#/$defs/context/items/format",keyword:"format",params:{format:"uri"},message:'must match format "uri"'};e===null?e=[d]:e.push(d),t++}}else{let d={instancePath:r+"/@context/"+m,schemaPath:"https://allmaps.org/annotation/schemas/annotation.json#/$defs/context/items/type",keyword:"type",params:{type:"string"},message:"must be string"};e===null?e=[d]:e.push(d),t++}}}else{let o={instancePath:r+"/@context",schemaPath:"https://allmaps.org/annotation/schemas/annotation.json#/$defs/context/type",keyword:"type",params:{type:"array"},message:"must be array"};e===null?e=[o]:e.push(o),t++}if(t>0){let o=[];for(let p of e)p.keyword!=="errorMessage"&&!p.emUsed&&(p.instancePath===r+"/@context"||p.instancePath.indexOf(r+"/@context")===0&&p.instancePath[r+"/@context".length]==="/")&&p.schemaPath.indexOf("https://allmaps.org/annotation/schemas/annotation.json#/$defs/context")===0&&p.schemaPath["https://allmaps.org/annotation/schemas/annotation.json#/$defs/context".length]==="/"&&(o.push(p),p.emUsed=!0);if(o.length){let p={instancePath:r+"/@context",schemaPath:"https://allmaps.org/annotation/schemas/annotation.json#/$defs/context/errorMessage",keyword:"errorMessage",params:{errors:o},message:'Invalid JSON-LD context. Property `@context` must be an array containing all of the following URLs: `"http://www.w3.org/ns/anno.jsonld"`, `"http://geojson.org/geojson-ld/geojson-context.jsonld"` and `http://iiif.io/api/presentation/3/context.json"`.'};e===null?e=[p]:e.push(p),t++}let m=[];for(let p of e)p.emUsed||m.push(p);e=m,t=m.length}}if(l.items!==void 0){let a=l.items;if(Array.isArray(a)){let o=a.length;for(let m=0;m<o;m++)x(a[m],{instancePath:r+"/items/"+m,parentData:a,parentDataProperty:m,rootData:y,dynamicAnchors:v})||(e=e===null?x.errors:e.concat(x.errors),t=e.length)}else{let o={instancePath:r+"/items",schemaPath:"#/properties/items/type",keyword:"type",params:{type:"array"},message:"must be array"};e===null?e=[o]:e.push(o),t++}}}else{let a={instancePath:r,schemaPath:"#/type",keyword:"type",params:{type:"object"},message:"must be object"};e===null?e=[a]:e.push(a),t++}if(t>0){let a=[];for(let m of e)m.keyword!=="errorMessage"&&!m.emUsed&&(m.instancePath===r||m.instancePath.indexOf(r)===0&&m.instancePath[r.length]==="/")&&m.schemaPath.indexOf("#")===0&&m.schemaPath["#".length]==="/"&&(a.push(m),m.emUsed=!0);if(a.length){let m={instancePath:r,schemaPath:"#/errorMessage",keyword:"errorMessage",params:{errors:a},message:'Invalid annotation. Annotation Page must have a property `type` with value `"AnnotationPage"` and the property `items` must be an array with 0 or more georeference annotations.'};e===null?e=[m]:e.push(m),t++}let o=[];for(let m of e)m.emUsed||o.push(m);e=o,t=o.length}return q.errors=e,t===0}q.evaluated={props:{type:!0,"@context":!0,items:!0},dynamicProps:!1,dynamicItems:!1};"use strict";export{we as validateAnnotation,Pe as validateAnnotationPage,ge as validateMap,ve as validateMaps};
